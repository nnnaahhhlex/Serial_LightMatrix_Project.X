

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 15 15:13:29 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F690 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0118                     	;# 
   116  0119                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011E                     	;# 
   120  011F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  008F                     	;# 
   164  0090                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0093                     	;# 
   169  0094                     	;# 
   170  0095                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0096                     	;# 
   174  0097                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009A                     	;# 
   178  009B                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  0115                     	;# 
   187  0116                     	;# 
   188  0118                     	;# 
   189  0119                     	;# 
   190  011A                     	;# 
   191  011B                     	;# 
   192  011E                     	;# 
   193  011F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  019D                     	;# 
   197  019E                     	;# 
   198                           
   199                           	psect	idataCOMMON
   200  063F                     __pidataCOMMON:
   201                           
   202                           ;initializer for _pointer
   203  063F  347A               	retlw	low (_UART_Buffer| 0)
   204                           
   205                           ;initializer for _UART_Buffer
   206  0640  3477               	retlw	119
   207  000B                     _INTCON	set	11
   208  0018                     _RCSTA	set	24
   209  001A                     _RCREG	set	26
   210  0019                     _TXREG	set	25
   211  000C                     _PIR1bits	set	12
   212  0007                     _PORTC	set	7
   213  0018                     _RCSTAbits	set	24
   214  008C                     _PIE1	set	140
   215  0099                     _SPBRG	set	153
   216  009B                     _BAUDCTL	set	155
   217  0098                     _TXSTA	set	152
   218  008F                     _OSCCON	set	143
   219  0086                     _TRISB	set	134
   220  0087                     _TRISC	set	135
   221  009B                     _BAUDCTLbits	set	155
   222                           
   223                           	psect	strings
   224  0002                     __pstrings:
   225  0002                     stringtab:
   226  0002                     __stringtab:
   227  0002                     stringcode:	
   228                           ;	String table - string pointers are 1 byte each
   229                           
   230  0002                     stringdir:
   231  0002  3000               	movlw	high stringdir
   232  0003  008A               	movwf	10
   233  0004  0804               	movf	4,w
   234  0005  0A84               	incf	4,f
   235  0006  0782               	addwf	2,f
   236  0007                     __stringbase:
   237  0007  3400               	retlw	0
   238  0008                     __end_of__stringtab:
   239  0008                     STR_5:
   240  0008  3442               	retlw	66	;'B'
   241  0009  3475               	retlw	117	;'u'
   242  000A  3466               	retlw	102	;'f'
   243  000B  3466               	retlw	102	;'f'
   244  000C  3465               	retlw	101	;'e'
   245  000D  3472               	retlw	114	;'r'
   246  000E  3420               	retlw	32	;' '
   247  000F  3456               	retlw	86	;'V'
   248  0010  3461               	retlw	97	;'a'
   249  0011  346C               	retlw	108	;'l'
   250  0012  3475               	retlw	117	;'u'
   251  0013  3465               	retlw	101	;'e'
   252  0014  343A               	retlw	58	;':'
   253  0015  3420               	retlw	32	;' '
   254  0016  3400               	retlw	0
   255  0017                     STR_1:
   256  0017  3453               	retlw	83	;'S'
   257  0018  3474               	retlw	116	;'t'
   258  0019  3461               	retlw	97	;'a'
   259  001A  3472               	retlw	114	;'r'
   260  001B  3474               	retlw	116	;'t'
   261  001C  3420               	retlw	32	;' '
   262  001D  3456               	retlw	86	;'V'
   263  001E  3461               	retlw	97	;'a'
   264  001F  346C               	retlw	108	;'l'
   265  0020  3475               	retlw	117	;'u'
   266  0021  3465               	retlw	101	;'e'
   267  0022  343A               	retlw	58	;':'
   268  0023  3420               	retlw	32	;' '
   269  0024  3400               	retlw	0
   270  0025                     STR_7:
   271  0025  3449               	retlw	73	;'I'
   272  0026  346E               	retlw	110	;'n'
   273  0027  3420               	retlw	32	;' '
   274  0028  3477               	retlw	119	;'w'
   275  0029  3468               	retlw	104	;'h'
   276  002A  3469               	retlw	105	;'i'
   277  002B  346C               	retlw	108	;'l'
   278  002C  3465               	retlw	101	;'e'
   279  002D  3420               	retlw	32	;' '
   280  002E  346C               	retlw	108	;'l'
   281  002F  346F               	retlw	111	;'o'
   282  0030  346F               	retlw	111	;'o'
   283  0031  3470               	retlw	112	;'p'
   284  0032  3400               	retlw	0
   285  0033                     STR_8:
   286  0033  3446               	retlw	70	;'F'
   287  0034  3472               	retlw	114	;'r'
   288  0035  3461               	retlw	97	;'a'
   289  0036  346D               	retlw	109	;'m'
   290  0037  3469               	retlw	105	;'i'
   291  0038  346E               	retlw	110	;'n'
   292  0039  3467               	retlw	103	;'g'
   293  003A  3420               	retlw	32	;' '
   294  003B  3445               	retlw	69	;'E'
   295  003C  3472               	retlw	114	;'r'
   296  003D  3472               	retlw	114	;'r'
   297  003E  346F               	retlw	111	;'o'
   298  003F  3472               	retlw	114	;'r'
   299  0040  3400               	retlw	0
   300  0041                     STR_6:
   301  0041  344F               	retlw	79	;'O'
   302  0042  3476               	retlw	118	;'v'
   303  0043  3465               	retlw	101	;'e'
   304  0044  3472               	retlw	114	;'r'
   305  0045  3472               	retlw	114	;'r'
   306  0046  3475               	retlw	117	;'u'
   307  0047  346E               	retlw	110	;'n'
   308  0048  3420               	retlw	32	;' '
   309  0049  3445               	retlw	69	;'E'
   310  004A  3472               	retlw	114	;'r'
   311  004B  3472               	retlw	114	;'r'
   312  004C  346F               	retlw	111	;'o'
   313  004D  3472               	retlw	114	;'r'
   314  004E  3400               	retlw	0
   315  004F                     STR_2:
   316  004F  3449               	retlw	73	;'I'
   317  0050  346E               	retlw	110	;'n'
   318  0051  3469               	retlw	105	;'i'
   319  0052  3474               	retlw	116	;'t'
   320  0053  3469               	retlw	105	;'i'
   321  0054  3461               	retlw	97	;'a'
   322  0055  346C               	retlw	108	;'l'
   323  0056  3469               	retlw	105	;'i'
   324  0057  347A               	retlw	122	;'z'
   325  0058  3465               	retlw	101	;'e'
   326  0059  3464               	retlw	100	;'d'
   327  005A  3400               	retlw	0
   328  005B                     STR_4:
   329  005B  3447               	retlw	71	;'G'
   330  005C  3465               	retlw	101	;'e'
   331  005D  3474               	retlw	116	;'t'
   332  005E  3420               	retlw	32	;' '
   333  005F  3463               	retlw	99	;'c'
   334  0060  3468               	retlw	104	;'h'
   335  0061  3461               	retlw	97	;'a'
   336  0062  3472               	retlw	114	;'r'
   337  0063  343A               	retlw	58	;':'
   338  0064  3420               	retlw	32	;' '
   339  0065  3400               	retlw	0
   340  0066                     STR_3:
   341  0066  3442               	retlw	66	;'B'
   342  0067  3465               	retlw	101	;'e'
   343  0068  3467               	retlw	103	;'g'
   344  0069  3469               	retlw	105	;'i'
   345  006A  346E               	retlw	110	;'n'
   346  006B  3420               	retlw	32	;' '
   347  006C  346C               	retlw	108	;'l'
   348  006D  346F               	retlw	111	;'o'
   349  006E  346F               	retlw	111	;'o'
   350  006F  3470               	retlw	112	;'p'
   351  0070  3400               	retlw	0
   352  0071                     STR_11:
   353  0071  3452               	retlw	82	;'R'
   354  0072  3465               	retlw	101	;'e'
   355  0073  3461               	retlw	97	;'a'
   356  0074  3464               	retlw	100	;'d'
   357  0075  3469               	retlw	105	;'i'
   358  0076  346E               	retlw	110	;'n'
   359  0077  3467               	retlw	103	;'g'
   360  0078  3400               	retlw	0
   361  0079                     STR_10:
   362  0079  3449               	retlw	73	;'I'
   363  007A  3464               	retlw	100	;'d'
   364  007B  346C               	retlw	108	;'l'
   365  007C  3469               	retlw	105	;'i'
   366  007D  346E               	retlw	110	;'n'
   367  007E  3467               	retlw	103	;'g'
   368  007F  3400               	retlw	0
   369  0080                     STR_9:
   370  0080  3452               	retlw	82	;'R'
   371  0081  3465               	retlw	101	;'e'
   372  0082  3473               	retlw	115	;'s'
   373  0083  3465               	retlw	101	;'e'
   374  0084  3474               	retlw	116	;'t'
   375  0085  3400               	retlw	0
   376                           
   377                           	psect	cinit
   378  07F5                     start_initialization:	
   379                           ; #config settings
   380                           
   381  07F5                     __initialization:
   382                           
   383                           ; Initialize objects allocated to COMMON
   384  07F5  118A  263F  118A   	fcall	__pidataCOMMON	;fetch initializer
   385  07F8  00F9               	movwf	__pdataCOMMON& (0+127)
   386  07F9  118A  2640  118A   	fcall	__pidataCOMMON+1	;fetch initializer
   387  07FC  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   388  07FD                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391  07FD                     __end_of__initialization:
   392  07FD  0183               	clrf	3
   393  07FE  118A  2F0F         	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	dataCOMMON
   396  0079                     __pdataCOMMON:
   397  0079                     _pointer:
   398  0079                     	ds	1
   399  007A                     _UART_Buffer:
   400  007A                     	ds	1
   401                           
   402                           	psect	cstackCOMMON
   403  0070                     __pcstackCOMMON:
   404  0070                     ?_initiate:
   405  0070                     ??_initiate:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_UART_send_string:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_UART_send_char:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_UART_send_char:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_UART_get_char:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_flash_red:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ??_flash_red:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     UART_send_char@bt:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434  0070                     	ds	1
   435  0071                     ??_UART_send_string:
   436                           
   437                           ; 1 bytes @ 0x1
   438  0071                     	ds	1
   439  0072                     UART_send_string@st_pt:
   440                           
   441                           ; 1 bytes @ 0x2
   442  0072                     	ds	1
   443  0073                     ??_UART_get_char:
   444                           
   445                           ; 1 bytes @ 0x3
   446  0073                     	ds	3
   447  0076                     ??_main:
   448                           
   449                           ; 1 bytes @ 0x6
   450  0076                     	ds	3
   451                           
   452                           	psect	maintext
   453  070F                     __pmaintext:	
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 22 in file "Main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : B00/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   473 ;;      Params:         0       0       0       0
   474 ;;      Locals:         0       0       0       0
   475 ;;      Temps:          3       0       0       0
   476 ;;      Totals:         3       0       0       0
   477 ;;Total ram usage:        3 bytes
   478 ;; Hardware stack levels required when called: 3
   479 ;; This function calls:
   480 ;;		_UART_get_char
   481 ;;		_UART_send_char
   482 ;;		_UART_send_string
   483 ;;		_flash_red
   484 ;;		_initiate
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _main
   492  070F                     _main:
   493  070F                     l889:	
   494                           ;incstack = 0
   495                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   496                           
   497                           
   498                           ;Main.c: 24:     RCSTAbits.SPEN = 0;
   499  070F  1283               	bcf	3,5	;RP0=0, select bank0
   500  0710  1303               	bcf	3,6	;RP1=0, select bank0
   501  0711  1398               	bcf	24,7	;volatile
   502  0712                     l891:
   503                           
   504                           ;Main.c: 25:     initiate();
   505  0712  118A  264B  118A   	fcall	_initiate
   506  0715                     l893:
   507                           
   508                           ;Main.c: 26:     _delay((unsigned long)((1500)*(8000000/4000.0)));
   509  0715  3010               	movlw	16
   510  0716  00F8               	movwf	??_main+2
   511  0717  3039               	movlw	57
   512  0718  00F7               	movwf	??_main+1
   513  0719  300D               	movlw	13
   514  071A  00F6               	movwf	??_main
   515  071B                     u187:
   516  071B  0BF6               	decfsz	??_main,f
   517  071C  2F1B               	goto	u187
   518  071D  0BF7               	decfsz	??_main+1,f
   519  071E  2F1B               	goto	u187
   520  071F  0BF8               	decfsz	??_main+2,f
   521  0720  2F1B               	goto	u187
   522  0721  2F22               	nop2
   523  0722                     l895:
   524                           
   525                           ;Main.c: 28:     PORTC = 0x00;
   526  0722  1283               	bcf	3,5	;RP0=0, select bank0
   527  0723  1303               	bcf	3,6	;RP1=0, select bank0
   528  0724  0187               	clrf	7	;volatile
   529  0725                     l897:
   530                           
   531                           ;Main.c: 29:     UART_send_string("Start Value: ");
   532  0725  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   533  0726  118A  2663  118A   	fcall	_UART_send_string
   534  0729                     l899:
   535                           
   536                           ;Main.c: 30:     UART_send_char(UART_Buffer);
   537  0729  087A               	movf	_UART_Buffer,w
   538  072A  118A  2641  118A   	fcall	_UART_send_char
   539  072D                     l901:
   540                           
   541                           ;Main.c: 31:     UART_send_char('\r');
   542  072D  300D               	movlw	13
   543  072E  118A  2641  118A   	fcall	_UART_send_char
   544  0731                     l903:
   545                           
   546                           ;Main.c: 33:     UART_send_string("Initialized");
   547  0731  3048               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   548  0732  118A  2663  118A   	fcall	_UART_send_string
   549  0735                     l905:
   550                           
   551                           ;Main.c: 34:     UART_send_char('\r');
   552  0735  300D               	movlw	13
   553  0736  118A  2641  118A   	fcall	_UART_send_char
   554  0739                     l907:
   555                           
   556                           ;Main.c: 36:     _delay((unsigned long)((250)*(8000000/4000.0)));
   557  0739  3003               	movlw	3
   558  073A  00F8               	movwf	??_main+2
   559  073B  308A               	movlw	138
   560  073C  00F7               	movwf	??_main+1
   561  073D  3055               	movlw	85
   562  073E  00F6               	movwf	??_main
   563  073F                     u197:
   564  073F  0BF6               	decfsz	??_main,f
   565  0740  2F3F               	goto	u197
   566  0741  0BF7               	decfsz	??_main+1,f
   567  0742  2F3F               	goto	u197
   568  0743  0BF8               	decfsz	??_main+2,f
   569  0744  2F3F               	goto	u197
   570  0745  2F46               	nop2
   571  0746                     l909:
   572                           
   573                           ;Main.c: 37:     RCSTAbits.SPEN = 1;
   574  0746  1283               	bcf	3,5	;RP0=0, select bank0
   575  0747  1303               	bcf	3,6	;RP1=0, select bank0
   576  0748  1798               	bsf	24,7	;volatile
   577  0749                     l911:
   578                           
   579                           ;Main.c: 38:     _delay((unsigned long)((250)*(8000000/4000.0)));
   580  0749  3003               	movlw	3
   581  074A  00F8               	movwf	??_main+2
   582  074B  308A               	movlw	138
   583  074C  00F7               	movwf	??_main+1
   584  074D  3055               	movlw	85
   585  074E  00F6               	movwf	??_main
   586  074F                     u207:
   587  074F  0BF6               	decfsz	??_main,f
   588  0750  2F4F               	goto	u207
   589  0751  0BF7               	decfsz	??_main+1,f
   590  0752  2F4F               	goto	u207
   591  0753  0BF8               	decfsz	??_main+2,f
   592  0754  2F4F               	goto	u207
   593  0755  2F56               	nop2
   594  0756                     l913:
   595                           
   596                           ;Main.c: 45:        UART_send_string("Begin loop");
   597  0756  305F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   598  0757  118A  2663  118A   	fcall	_UART_send_string
   599  075A                     l915:
   600                           
   601                           ;Main.c: 46:        UART_send_char('\r');
   602  075A  300D               	movlw	13
   603  075B  118A  2641  118A   	fcall	_UART_send_char
   604  075E                     l917:
   605                           
   606                           ;Main.c: 47:        UART_send_string("Get char: ");
   607  075E  3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   608  075F  118A  2663  118A   	fcall	_UART_send_string
   609  0762                     l919:
   610                           
   611                           ;Main.c: 48:        UART_send_char('\r');
   612  0762  300D               	movlw	13
   613  0763  118A  2641  118A   	fcall	_UART_send_char
   614  0766                     l921:
   615                           
   616                           ;Main.c: 50:        _delay((unsigned long)((1000)*(8000000/4000.0)));
   617  0766  300B               	movlw	11
   618  0767  00F8               	movwf	??_main+2
   619  0768  3026               	movlw	38
   620  0769  00F7               	movwf	??_main+1
   621  076A  305D               	movlw	93
   622  076B  00F6               	movwf	??_main
   623  076C                     u217:
   624  076C  0BF6               	decfsz	??_main,f
   625  076D  2F6C               	goto	u217
   626  076E  0BF7               	decfsz	??_main+1,f
   627  076F  2F6C               	goto	u217
   628  0770  0BF8               	decfsz	??_main+2,f
   629  0771  2F6C               	goto	u217
   630  0772  2F73               	nop2
   631  0773                     l923:
   632                           
   633                           ;Main.c: 53:        UART_Buffer = UART_get_char();
   634  0773  118A  269E  118A   	fcall	_UART_get_char
   635  0776  00F6               	movwf	??_main
   636  0777  0876               	movf	??_main,w
   637  0778  00FA               	movwf	_UART_Buffer
   638  0779                     l925:
   639                           
   640                           ;Main.c: 55:        UART_send_string("Buffer Value: ");
   641  0779  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   642  077A  118A  2663  118A   	fcall	_UART_send_string
   643  077D                     l927:
   644                           
   645                           ;Main.c: 56:        UART_send_char(UART_Buffer);
   646  077D  087A               	movf	_UART_Buffer,w
   647  077E  118A  2641  118A   	fcall	_UART_send_char
   648  0781                     l929:
   649                           
   650                           ;Main.c: 57:        UART_send_char('\r');
   651  0781  300D               	movlw	13
   652  0782  118A  2641  118A   	fcall	_UART_send_char
   653  0785                     l931:
   654                           
   655                           ;Main.c: 59:        if(UART_Buffer == 'a'){
   656  0785  3061               	movlw	97
   657  0786  067A               	xorwf	_UART_Buffer,w
   658  0787  1D03               	btfss	3,2
   659  0788  2F8A               	goto	u151
   660  0789  2F8B               	goto	u150
   661  078A                     u151:
   662  078A  2FB1               	goto	l941
   663  078B                     u150:
   664  078B                     l933:
   665                           
   666                           ;Main.c: 60:        PORTC = 0x01;
   667  078B  3001               	movlw	1
   668  078C  1283               	bcf	3,5	;RP0=0, select bank0
   669  078D  1303               	bcf	3,6	;RP1=0, select bank0
   670  078E  0087               	movwf	7	;volatile
   671                           
   672                           ;Main.c: 62:        _delay((unsigned long)((2000)*(8000000/4000.0)));
   673  078F  3015               	movlw	21
   674  0790  00F8               	movwf	??_main+2
   675  0791  304B               	movlw	75
   676  0792  00F7               	movwf	??_main+1
   677  0793  30BE               	movlw	190
   678  0794  00F6               	movwf	??_main
   679  0795                     u227:
   680  0795  0BF6               	decfsz	??_main,f
   681  0796  2F95               	goto	u227
   682  0797  0BF7               	decfsz	??_main+1,f
   683  0798  2F95               	goto	u227
   684  0799  0BF8               	decfsz	??_main+2,f
   685  079A  2F95               	goto	u227
   686  079B  0000               	nop
   687  079C                     l935:
   688                           
   689                           ;Main.c: 63:        PORTC = 0x00;
   690  079C  1283               	bcf	3,5	;RP0=0, select bank0
   691  079D  1303               	bcf	3,6	;RP1=0, select bank0
   692  079E  0187               	clrf	7	;volatile
   693  079F                     l937:
   694                           
   695                           ;Main.c: 64:        UART_send_char('a');
   696  079F  3061               	movlw	97
   697  07A0  118A  2641  118A   	fcall	_UART_send_char
   698  07A3                     l939:
   699                           
   700                           ;Main.c: 65:        _delay((unsigned long)((1000)*(8000000/4000.0)));
   701  07A3  300B               	movlw	11
   702  07A4  00F8               	movwf	??_main+2
   703  07A5  3026               	movlw	38
   704  07A6  00F7               	movwf	??_main+1
   705  07A7  305D               	movlw	93
   706  07A8  00F6               	movwf	??_main
   707  07A9                     u237:
   708  07A9  0BF6               	decfsz	??_main,f
   709  07AA  2FA9               	goto	u237
   710  07AB  0BF7               	decfsz	??_main+1,f
   711  07AC  2FA9               	goto	u237
   712  07AD  0BF8               	decfsz	??_main+2,f
   713  07AE  2FA9               	goto	u237
   714  07AF  2FB0               	nop2
   715                           
   716                           ;Main.c: 66:        }
   717  07B0  2F56               	goto	l913
   718  07B1                     l941:
   719  07B1  3062               	movlw	98
   720  07B2  067A               	xorwf	_UART_Buffer,w
   721  07B3  1D03               	btfss	3,2
   722  07B4  2FB6               	goto	u161
   723  07B5  2FB7               	goto	u160
   724  07B6                     u161:
   725  07B6  2FD0               	goto	l951
   726  07B7                     u160:
   727  07B7                     l943:
   728                           
   729                           ;Main.c: 69:        PORTC = 0x02;
   730  07B7  3002               	movlw	2
   731  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   732  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   733  07BA  0087               	movwf	7	;volatile
   734                           
   735                           ;Main.c: 71:        _delay((unsigned long)((2000)*(8000000/4000.0)));
   736  07BB  3015               	movlw	21
   737  07BC  00F8               	movwf	??_main+2
   738  07BD  304B               	movlw	75
   739  07BE  00F7               	movwf	??_main+1
   740  07BF  30BE               	movlw	190
   741  07C0  00F6               	movwf	??_main
   742  07C1                     u247:
   743  07C1  0BF6               	decfsz	??_main,f
   744  07C2  2FC1               	goto	u247
   745  07C3  0BF7               	decfsz	??_main+1,f
   746  07C4  2FC1               	goto	u247
   747  07C5  0BF8               	decfsz	??_main+2,f
   748  07C6  2FC1               	goto	u247
   749  07C7  0000               	nop
   750  07C8                     l945:
   751                           
   752                           ;Main.c: 72:        PORTC = 0x00;
   753  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   754  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   755  07CA  0187               	clrf	7	;volatile
   756  07CB                     l947:
   757                           
   758                           ;Main.c: 73:        UART_send_char('b');
   759  07CB  3062               	movlw	98
   760  07CC  118A  2641  118A   	fcall	_UART_send_char
   761  07CF  2FA3               	goto	l939
   762  07D0                     l951:
   763  07D0  3063               	movlw	99
   764  07D1  067A               	xorwf	_UART_Buffer,w
   765  07D2  1D03               	btfss	3,2
   766  07D3  2FD5               	goto	u171
   767  07D4  2FD6               	goto	u170
   768  07D5                     u171:
   769  07D5  2FEF               	goto	l961
   770  07D6                     u170:
   771  07D6                     l953:
   772                           
   773                           ;Main.c: 78:        PORTC = 0x03;
   774  07D6  3003               	movlw	3
   775  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   776  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   777  07D9  0087               	movwf	7	;volatile
   778                           
   779                           ;Main.c: 80:        _delay((unsigned long)((2000)*(8000000/4000.0)));
   780  07DA  3015               	movlw	21
   781  07DB  00F8               	movwf	??_main+2
   782  07DC  304B               	movlw	75
   783  07DD  00F7               	movwf	??_main+1
   784  07DE  30BE               	movlw	190
   785  07DF  00F6               	movwf	??_main
   786  07E0                     u257:
   787  07E0  0BF6               	decfsz	??_main,f
   788  07E1  2FE0               	goto	u257
   789  07E2  0BF7               	decfsz	??_main+1,f
   790  07E3  2FE0               	goto	u257
   791  07E4  0BF8               	decfsz	??_main+2,f
   792  07E5  2FE0               	goto	u257
   793  07E6  0000               	nop
   794  07E7                     l955:
   795                           
   796                           ;Main.c: 81:        PORTC = 0x00;
   797  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   798  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   799  07E9  0187               	clrf	7	;volatile
   800  07EA                     l957:
   801                           
   802                           ;Main.c: 82:        UART_send_char('c');
   803  07EA  3063               	movlw	99
   804  07EB  118A  2641  118A   	fcall	_UART_send_char
   805  07EE  2FA3               	goto	l939
   806  07EF                     l961:
   807                           
   808                           ;Main.c: 86:        flash_red();
   809  07EF  118A  267C  118A   	fcall	_flash_red
   810  07F2  2F56               	goto	l913
   811  07F3  118A  2800         	ljmp	start
   812  07F5                     __end_of_main:
   813                           
   814                           	psect	text1
   815  064B                     __ptext1:	
   816 ;; *************** function _initiate *****************
   817 ;; Defined at:
   818 ;;		line 170 in file "Main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   832 ;;      Params:         0       0       0       0
   833 ;;      Locals:         0       0       0       0
   834 ;;      Temps:          0       0       0       0
   835 ;;      Totals:         0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _initiate
   847  064B                     _initiate:
   848  064B                     l691:	
   849                           ;incstack = 0
   850                           ; Regs used in _initiate: [wreg+status,2]
   851                           
   852                           
   853                           ;Main.c: 172:     TRISC = 0b11111100;
   854  064B  30FC               	movlw	252
   855  064C  1683               	bsf	3,5	;RP0=1, select bank1
   856  064D  1303               	bcf	3,6	;RP1=0, select bank1
   857  064E  0087               	movwf	7	;volatile
   858                           
   859                           ;Main.c: 173:     TRISB = 0b01110000;
   860  064F  3070               	movlw	112
   861  0650  0086               	movwf	6	;volatile
   862                           
   863                           ;Main.c: 174:     OSCCON = 0b01110111;
   864  0651  3077               	movlw	119
   865  0652  008F               	movwf	15	;volatile
   866                           
   867                           ;Main.c: 177:     TXSTA = 0b00100110;
   868  0653  3026               	movlw	38
   869  0654  0098               	movwf	24	;volatile
   870                           
   871                           ;Main.c: 187:     RCSTA = 0b10110000;
   872  0655  30B0               	movlw	176
   873  0656  1283               	bcf	3,5	;RP0=0, select bank0
   874  0657  1303               	bcf	3,6	;RP1=0, select bank0
   875  0658  0098               	movwf	24	;volatile
   876  0659                     l693:
   877                           
   878                           ;Main.c: 198:     BAUDCTL = 0b00000000;
   879  0659  1683               	bsf	3,5	;RP0=1, select bank1
   880  065A  1303               	bcf	3,6	;RP1=0, select bank1
   881  065B  019B               	clrf	27	;volatile
   882  065C                     l695:
   883                           
   884                           ;Main.c: 209:     SPBRG = 25;
   885  065C  3019               	movlw	25
   886  065D  0099               	movwf	25	;volatile
   887  065E                     l697:
   888                           
   889                           ;Main.c: 212:     INTCON = 0b11000000;
   890  065E  30C0               	movlw	192
   891  065F  008B               	movwf	11	;volatile
   892  0660                     l699:
   893                           
   894                           ;Main.c: 223:     PIE1 = 0b00110000;
   895  0660  3030               	movlw	48
   896  0661  008C               	movwf	12	;volatile
   897  0662                     l87:
   898  0662  0008               	return
   899  0663                     __end_of_initiate:
   900                           
   901                           	psect	text2
   902  067C                     __ptext2:	
   903 ;; *************** function _flash_red *****************
   904 ;; Defined at:
   905 ;;		line 162 in file "Main.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   919 ;;      Params:         0       0       0       0
   920 ;;      Locals:         0       0       0       0
   921 ;;      Temps:          3       0       0       0
   922 ;;      Totals:         3       0       0       0
   923 ;;Total ram usage:        3 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _flash_red
   934  067C                     _flash_red:
   935  067C                     l751:	
   936                           ;incstack = 0
   937                           ; Regs used in _flash_red: [wreg+status,2]
   938                           
   939                           
   940                           ;Main.c: 163:     PORTC = 0x01;
   941  067C  3001               	movlw	1
   942  067D  1283               	bcf	3,5	;RP0=0, select bank0
   943  067E  1303               	bcf	3,6	;RP1=0, select bank0
   944  067F  0087               	movwf	7	;volatile
   945                           
   946                           ;Main.c: 164:     _delay((unsigned long)((500)*(8000000/4000.0)));
   947  0680  3006               	movlw	6
   948  0681  00F2               	movwf	??_flash_red+2
   949  0682  3013               	movlw	19
   950  0683  00F1               	movwf	??_flash_red+1
   951  0684  30AD               	movlw	173
   952  0685  00F0               	movwf	??_flash_red
   953  0686                     u267:
   954  0686  0BF0               	decfsz	??_flash_red,f
   955  0687  2E86               	goto	u267
   956  0688  0BF1               	decfsz	??_flash_red+1,f
   957  0689  2E86               	goto	u267
   958  068A  0BF2               	decfsz	??_flash_red+2,f
   959  068B  2E86               	goto	u267
   960  068C  2E8D               	nop2
   961  068D                     l753:
   962                           
   963                           ;Main.c: 165:     PORTC = 0x00;
   964  068D  1283               	bcf	3,5	;RP0=0, select bank0
   965  068E  1303               	bcf	3,6	;RP1=0, select bank0
   966  068F  0187               	clrf	7	;volatile
   967  0690                     l755:
   968                           
   969                           ;Main.c: 166:     _delay((unsigned long)((500)*(8000000/4000.0)));
   970  0690  3006               	movlw	6
   971  0691  00F2               	movwf	??_flash_red+2
   972  0692  3013               	movlw	19
   973  0693  00F1               	movwf	??_flash_red+1
   974  0694  30AD               	movlw	173
   975  0695  00F0               	movwf	??_flash_red
   976  0696                     u277:
   977  0696  0BF0               	decfsz	??_flash_red,f
   978  0697  2E96               	goto	u277
   979  0698  0BF1               	decfsz	??_flash_red+1,f
   980  0699  2E96               	goto	u277
   981  069A  0BF2               	decfsz	??_flash_red+2,f
   982  069B  2E96               	goto	u277
   983  069C  2E9D               	nop2
   984  069D                     l84:
   985  069D  0008               	return
   986  069E                     __end_of_flash_red:
   987                           
   988                           	psect	text3
   989  069E                     __ptext3:	
   990 ;; *************** function _UART_get_char *****************
   991 ;; Defined at:
   992 ;;		line 118 in file "Main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  garbage         1    0        unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1006 ;;      Params:         0       0       0       0
  1007 ;;      Locals:         0       0       0       0
  1008 ;;      Temps:          3       0       0       0
  1009 ;;      Totals:         3       0       0       0
  1010 ;;Total ram usage:        3 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 2
  1013 ;; This function calls:
  1014 ;;		_UART_send_char
  1015 ;;		_UART_send_string
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _UART_get_char
  1023  069E                     _UART_get_char:
  1024  069E                     l839:	
  1025                           ;incstack = 0
  1026                           ; Regs used in _UART_get_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1027                           
  1028                           
  1029                           ;Main.c: 120:     char garbage;;Main.c: 121:         if(RCSTAbits.OERR)
  1030  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1031  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1032  06A0  1C98               	btfss	24,1	;volatile
  1033  06A1  2EA3               	goto	u111
  1034  06A2  2EA4               	goto	u110
  1035  06A3                     u111:
  1036  06A3  2EF4               	goto	l877
  1037  06A4                     u110:
  1038  06A4                     l841:
  1039                           
  1040                           ;Main.c: 122:         {;Main.c: 123:             UART_send_string("Overrun Error");
  1041  06A4  303A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1042  06A5  118A  2663  118A   	fcall	_UART_send_string
  1043  06A8                     l843:
  1044                           
  1045                           ;Main.c: 124:             UART_send_char('\r');
  1046  06A8  300D               	movlw	13
  1047  06A9  118A  2641  118A   	fcall	_UART_send_char
  1048  06AC                     l845:
  1049                           
  1050                           ;Main.c: 126:             RCSTAbits.CREN = 0;
  1051  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1052  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1053  06AE  1218               	bcf	24,4	;volatile
  1054  06AF                     l847:
  1055                           
  1056                           ;Main.c: 127:             RCSTAbits.CREN = 1;
  1057  06AF  1618               	bsf	24,4	;volatile
  1058  06B0  2EF4               	goto	l877
  1059  06B1                     l849:
  1060                           
  1061                           ;Main.c: 131:         UART_send_string("In while loop");
  1062  06B1  301E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1063  06B2  118A  2663  118A   	fcall	_UART_send_string
  1064  06B5                     l851:
  1065                           
  1066                           ;Main.c: 132:         UART_send_char('\r');
  1067  06B5  300D               	movlw	13
  1068  06B6  118A  2641  118A   	fcall	_UART_send_char
  1069  06B9                     l853:
  1070                           
  1071                           ;Main.c: 134:         if(RCSTAbits.FERR)
  1072  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1073  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1074  06BB  1D18               	btfss	24,2	;volatile
  1075  06BC  2EBE               	goto	u121
  1076  06BD  2EBF               	goto	u120
  1077  06BE                     u121:
  1078  06BE  2EE6               	goto	l871
  1079  06BF                     u120:
  1080  06BF                     l855:
  1081                           
  1082                           ;Main.c: 135:         {;Main.c: 136:             UART_send_string("Framing Error");
  1083  06BF  302C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1084  06C0  118A  2663  118A   	fcall	_UART_send_string
  1085  06C3                     l857:
  1086                           
  1087                           ;Main.c: 137:             UART_send_char('\r');
  1088  06C3  300D               	movlw	13
  1089  06C4  118A  2641  118A   	fcall	_UART_send_char
  1090  06C7                     l859:
  1091                           
  1092                           ;Main.c: 138:             RCSTAbits.SREN = 0;
  1093  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1094  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1095  06C9  1298               	bcf	24,5	;volatile
  1096  06CA                     l861:
  1097                           
  1098                           ;Main.c: 139:             _delay((unsigned long)((2000)*(8000000/4000.0)));
  1099  06CA  3015               	movlw	21
  1100  06CB  00F5               	movwf	??_UART_get_char+2
  1101  06CC  304B               	movlw	75
  1102  06CD  00F4               	movwf	??_UART_get_char+1
  1103  06CE  30BE               	movlw	190
  1104  06CF  00F3               	movwf	??_UART_get_char
  1105  06D0                     u287:
  1106  06D0  0BF3               	decfsz	??_UART_get_char,f
  1107  06D1  2ED0               	goto	u287
  1108  06D2  0BF4               	decfsz	??_UART_get_char+1,f
  1109  06D3  2ED0               	goto	u287
  1110  06D4  0BF5               	decfsz	??_UART_get_char+2,f
  1111  06D5  2ED0               	goto	u287
  1112  06D6  0000               	nop
  1113  06D7                     l863:
  1114                           
  1115                           ;Main.c: 140:             RCSTAbits.SREN = 1;
  1116  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1117  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1118  06D9  1698               	bsf	24,5	;volatile
  1119  06DA                     l865:
  1120                           
  1121                           ;Main.c: 142:              UART_send_string("Reset");
  1122  06DA  3079               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1123  06DB  118A  2663  118A   	fcall	_UART_send_string
  1124  06DE                     l867:
  1125                           
  1126                           ;Main.c: 143:              UART_send_char('\r');
  1127  06DE  300D               	movlw	13
  1128  06DF  118A  2641  118A   	fcall	_UART_send_char
  1129  06E2                     l869:
  1130                           
  1131                           ;Main.c: 144:              UART_send_char('\r');
  1132  06E2  300D               	movlw	13
  1133  06E3  118A  2641  118A   	fcall	_UART_send_char
  1134  06E6                     l871:
  1135                           
  1136                           ;Main.c: 147:         if(BAUDCTLbits.RCIDL == 1){
  1137  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  1138  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  1139  06E8  1F1B               	btfss	27,6	;volatile
  1140  06E9  2EEB               	goto	u131
  1141  06EA  2EEC               	goto	u130
  1142  06EB                     u131:
  1143  06EB  2EF4               	goto	l877
  1144  06EC                     u130:
  1145  06EC                     l873:
  1146                           
  1147                           ;Main.c: 148:         UART_send_string("Idling");
  1148  06EC  3072               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1149  06ED  118A  2663  118A   	fcall	_UART_send_string
  1150  06F0                     l875:
  1151                           
  1152                           ;Main.c: 149:         UART_send_char('\r');
  1153  06F0  300D               	movlw	13
  1154  06F1  118A  2641  118A   	fcall	_UART_send_char
  1155  06F4                     l877:
  1156                           
  1157                           ;Main.c: 130:    while(!PIR1bits.RCIF){
  1158  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1159  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1160  06F6  1E8C               	btfss	12,5	;volatile
  1161  06F7  2EF9               	goto	u141
  1162  06F8  2EFA               	goto	u140
  1163  06F9                     u141:
  1164  06F9  2EB1               	goto	l849
  1165  06FA                     u140:
  1166  06FA                     l879:
  1167                           
  1168                           ;Main.c: 154:     UART_send_string("Reading");
  1169  06FA  306A               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1170  06FB  118A  2663  118A   	fcall	_UART_send_string
  1171  06FE                     l881:
  1172                           
  1173                           ;Main.c: 155:     UART_send_char('\r');
  1174  06FE  300D               	movlw	13
  1175  06FF  118A  2641  118A   	fcall	_UART_send_char
  1176  0702                     l883:
  1177                           
  1178                           ;Main.c: 156:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1179  0702  301A               	movlw	26
  1180  0703  00F4               	movwf	??_UART_get_char+1
  1181  0704  30F8               	movlw	248
  1182  0705  00F3               	movwf	??_UART_get_char
  1183  0706                     u297:
  1184  0706  0BF3               	decfsz	??_UART_get_char,f
  1185  0707  2F06               	goto	u297
  1186  0708  0BF4               	decfsz	??_UART_get_char+1,f
  1187  0709  2F06               	goto	u297
  1188  070A  0000               	nop
  1189  070B                     l885:
  1190                           
  1191                           ;Main.c: 158:     return RCREG;
  1192  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1193  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1194  070D  081A               	movf	26,w	;volatile
  1195  070E                     l81:
  1196  070E  0008               	return
  1197  070F                     __end_of_UART_get_char:
  1198                           
  1199                           	psect	text4
  1200  0663                     __ptext4:	
  1201 ;; *************** function _UART_send_string *****************
  1202 ;; Defined at:
  1203 ;;		line 111 in file "Main.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  st_pt           1    wreg     PTR unsigned char 
  1206 ;;		 -> STR_11(8), STR_10(7), STR_9(6), STR_8(14), 
  1207 ;;		 -> STR_7(14), STR_6(14), STR_5(15), STR_4(11), 
  1208 ;;		 -> STR_3(11), STR_2(12), STR_1(14), 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  st_pt           1    2[COMMON] PTR unsigned char 
  1211 ;;		 -> STR_11(8), STR_10(7), STR_9(6), STR_8(14), 
  1212 ;;		 -> STR_7(14), STR_6(14), STR_5(15), STR_4(11), 
  1213 ;;		 -> STR_3(11), STR_2(12), STR_1(14), 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1223 ;;      Params:         0       0       0       0
  1224 ;;      Locals:         1       0       0       0
  1225 ;;      Temps:          1       0       0       0
  1226 ;;      Totals:         2       0       0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels used: 1
  1229 ;; Hardware stack levels required when called: 1
  1230 ;; This function calls:
  1231 ;;		_UART_send_char
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;;		_UART_get_char
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _UART_send_string
  1240  0663                     _UART_send_string:
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1244                           ;UART_send_string@st_pt stored from wreg
  1245  0663  00F2               	movwf	UART_send_string@st_pt
  1246  0664                     l831:
  1247                           
  1248                           ;Main.c: 111: void UART_send_string(char* st_pt);Main.c: 112: {;Main.c: 113:     while(*
      +                          st_pt)
  1249  0664  2E71               	goto	l837
  1250  0665                     l833:
  1251                           
  1252                           ;Main.c: 114:         UART_send_char(*st_pt++);
  1253  0665  0872               	movf	UART_send_string@st_pt,w
  1254  0666  0084               	movwf	4
  1255  0667  118A  2002  118A   	fcall	stringdir
  1256  066A  118A  2641  118A   	fcall	_UART_send_char
  1257  066D                     l835:
  1258  066D  3001               	movlw	1
  1259  066E  00F1               	movwf	??_UART_send_string
  1260  066F  0871               	movf	??_UART_send_string,w
  1261  0670  07F2               	addwf	UART_send_string@st_pt,f
  1262  0671                     l837:
  1263                           
  1264                           ;Main.c: 113:     while(*st_pt)
  1265  0671  0872               	movf	UART_send_string@st_pt,w
  1266  0672  0084               	movwf	4
  1267  0673  118A  2002  118A   	fcall	stringdir
  1268  0676  3A00               	xorlw	0
  1269  0677  1D03               	skipz
  1270  0678  2E7A               	goto	u101
  1271  0679  2E7B               	goto	u100
  1272  067A                     u101:
  1273  067A  2E65               	goto	l833
  1274  067B                     u100:
  1275  067B                     l72:
  1276  067B  0008               	return
  1277  067C                     __end_of_UART_send_string:
  1278                           
  1279                           	psect	text5
  1280  0641                     __ptext5:	
  1281 ;; *************** function _UART_send_char *****************
  1282 ;; Defined at:
  1283 ;;		line 105 in file "Main.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  bt              1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  bt              1    0[COMMON] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1297 ;;      Params:         0       0       0       0
  1298 ;;      Locals:         1       0       0       0
  1299 ;;      Temps:          0       0       0       0
  1300 ;;      Totals:         1       0       0       0
  1301 ;;Total ram usage:        1 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;;		_UART_send_string
  1308 ;;		_UART_get_char
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _UART_send_char
  1314  0641                     _UART_send_char:
  1315                           
  1316                           ;incstack = 0
  1317                           ; Regs used in _UART_send_char: [wreg]
  1318                           ;UART_send_char@bt stored from wreg
  1319  0641  00F0               	movwf	UART_send_char@bt
  1320  0642                     l679:
  1321  0642                     l63:	
  1322                           ;Main.c: 105: void UART_send_char(char bt);Main.c: 106: {;Main.c: 107:     while(!PIR1bi
      +                          ts.TXIF);
  1323                           
  1324  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0644  1E0C               	btfss	12,4	;volatile
  1327  0645  2E47               	goto	u11
  1328  0646  2E48               	goto	u10
  1329  0647                     u11:
  1330  0647  2E42               	goto	l63
  1331  0648                     u10:
  1332  0648                     l681:
  1333                           
  1334                           ;Main.c: 108:     TXREG = bt;
  1335  0648  0870               	movf	UART_send_char@bt,w
  1336  0649  0099               	movwf	25	;volatile
  1337  064A                     l66:
  1338  064A  0008               	return
  1339  064B                     __end_of_UART_send_char:
  1340  007E                     btemp	set	126	;btemp
  1341  007E                     wtemp0	set	126
  1342                           
  1343                           	psect	config
  1344                           
  1345                           ;Config register CONFIG @ 0x2007
  1346                           ;	Oscillator Selection bits
  1347                           ;	FOSC = INTRCCLK, INTOSC oscillator: CLKOUT function on RA4/OSC2/CLKOUT pin, I/O functi
      +                          on on RA5/OSC1/CLKIN
  1348                           ;	Watchdog Timer Enable bit
  1349                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1350                           ;	Power-up Timer Enable bit
  1351                           ;	PWRTE = OFF, PWRT disabled
  1352                           ;	MCLR Pin Function Select bit
  1353                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  1354                           ;	Code Protection bit
  1355                           ;	CP = OFF, Program memory code protection is disabled
  1356                           ;	Data Code Protection bit
  1357                           ;	CPD = OFF, Data memory code protection is disabled
  1358                           ;	Brown-out Reset Selection bits
  1359                           ;	BOREN = OFF, BOR disabled
  1360                           ;	Internal External Switchover bit
  1361                           ;	IESO = OFF, Internal External Switchover mode is disabled
  1362                           ;	Fail-Safe Clock Monitor Enabled bit
  1363                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1364  2007                     	org	8199
  1365  2007  38D5               	dw	14549

Data Sizes:
    Strings     126
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_11(CODE[8]), STR_10(CODE[7]), STR_9(CODE[6]), STR_8(CODE[14]), 
		 -> STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[15]), STR_4(CODE[11]), 
		 -> STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[14]), 

    pointer	PTR unsigned char  size(1) Largest target is 1
		 -> UART_Buffer(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_UART_get_char
    _UART_get_char->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     876
                                              6 COMMON     3     3      0
                      _UART_get_char
                     _UART_send_char
                   _UART_send_string
                          _flash_red
                           _initiate
 ---------------------------------------------------------------------------------
 (1) _initiate                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flash_red                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_get_char                                        4     4      0     438
                                              3 COMMON     3     3      0
                     _UART_send_char
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     423
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_get_char
     _UART_send_char
     _UART_send_string
       _UART_send_char
   _UART_send_char
   _UART_send_string
   _flash_red
   _initiate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      10        0.0%
ABS                  0      0       B       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 15 15:13:29 2022

                        pc 0002                         l63 0642                         l72 067B  
                       l81 070E                         l66 064A                         l84 069D  
                       l87 0662                         u10 0648                         u11 0647  
                       fsr 0004                        l901 072D                        l831 0664  
                      l751 067C                        l911 0749                        l903 0731  
                      l681 0648                        l833 0665                        l841 06A4  
                      l753 068D                        l921 0766                        l913 0756  
                      l905 0735                        l835 066D                        l851 06B5  
                      l843 06A8                        l755 0690                        l691 064B  
                      l931 0785                        l923 0773                        l915 075A  
                      l907 0739                        l837 0671                        l861 06CA  
                      l853 06B9                        l845 06AC                        l693 0659  
                      l933 078B                        l941 07B1                        l925 0779  
                      l917 075E                        l909 0746                        l679 0642  
                      l863 06D7                        l855 06BF                        l871 06E6  
                      l847 06AF                        l839 069E                        l695 065C  
                      l943 07B7                        l951 07D0                        l935 079C  
                      l927 077D                        l919 0762                        l881 06FE  
                      l873 06EC                        l865 06DA                        l857 06C3  
                      l849 06B1                        l697 065E                        l953 07D6  
                      l961 07EF                        l945 07C8                        l937 079F  
                      l929 0781                        l883 0702                        l875 06F0  
                      l867 06DE                        l859 06C7                        l699 0660  
                      l955 07E7                        l947 07CB                        l939 07A3  
                      l891 0712                        l885 070B                        l869 06E2  
                      l877 06F4                        l957 07EA                        l893 0715  
                      l879 06FA                        l895 0722                        l897 0725  
                      l889 070F                        l899 0729                        u100 067B  
                      u101 067A                        u110 06A4                        u111 06A3  
                      u120 06BF                        u121 06BE                        u130 06EC  
                      u131 06EB                        u140 06FA                        u141 06F9  
                      u150 078B                        u151 078A                        u207 074F  
                      u160 07B7                        u161 07B6                        u217 076C  
                      u170 07D6                        u171 07D5                        u227 0795  
                      u237 07A9                        u247 07C1                        u257 07E0  
                      u267 0686                        u187 071B                        u277 0696  
                      u197 073F                        u287 06D0                        u297 0706  
                      fsr0 0004                       STR_1 0017                       STR_2 004F  
                     STR_3 0066                       STR_4 005B                       STR_5 0008  
                     STR_6 0041                       STR_7 0025                       STR_8 0033  
                     STR_9 0080                       _PIE1 008C                       _main 070F  
                     btemp 007E                       start 0000  __size_of_UART_send_string 0019  
                    ?_main 0070                      STR_10 0079                      STR_11 0071  
                    _RCREG 001A                      _RCSTA 0018                      _SPBRG 0099  
                    _PORTC 0007                      _TRISB 0086                      _TRISC 0087  
                    _TXREG 0019                      _TXSTA 0098                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 07F5  
             __end_of_main 07F5                     ??_main 0076                     _INTCON 000B  
                   _OSCCON 008F           __end_of_initiate 0663               __pdataCOMMON 0079  
  __end_of__initialization 07FD             __pcstackCOMMON 0070           _UART_send_string 0663  
    __end_of_UART_get_char 070F         __size_of_flash_red 0022                 __pmaintext 070F  
                  _BAUDCTL 009B    __size_of_UART_send_char 000A                 __stringtab 0002  
                ?_initiate 0070          __end_of_flash_red 069E                    __ptext1 064B  
                  __ptext2 067C                    __ptext3 069E                    __ptext4 0663  
                  __ptext5 0641                    _pointer 0079       end_of_initialization 07FD  
               ??_initiate 0070                  _RCSTAbits 0018   __end_of_UART_send_string 067C  
            __pidataCOMMON 063F                _BAUDCTLbits 009B        start_initialization 07F5  
           _UART_send_char 0641     __end_of_UART_send_char 064B                  ___latbits 0001  
   __size_of_UART_get_char 0071          __size_of_initiate 0018                  _flash_red 067C  
         UART_send_char@bt 0070                  __pstrings 0002            ?_UART_send_char 0070  
                 _PIR1bits 000C                 ?_flash_red 0070                __stringbase 0007  
    UART_send_string@st_pt 0072              _UART_get_char 069E          ?_UART_send_string 0070  
       ??_UART_send_string 0071         __end_of__stringtab 0008             ?_UART_get_char 0070  
            __size_of_main 00E6                   _initiate 064B                ??_flash_red 0070  
              _UART_Buffer 007A                  stringcode 0002           ??_UART_send_char 0070  
          ??_UART_get_char 0073                   stringdir 0002                   stringtab 0002  
