

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 19 12:33:49 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F690
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F690 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011E                     	;# 
   118  011F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  019D                     	;# 
   122  019E                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0095                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0096                     	;# 
   172  0097                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  0115                     	;# 
   185  0116                     	;# 
   186  0118                     	;# 
   187  0119                     	;# 
   188  011A                     	;# 
   189  011B                     	;# 
   190  011E                     	;# 
   191  011F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  0007                     _PORTCbits	set	7
   197  008F                     _OSCCON	set	143
   198  0086                     _TRISB	set	134
   199  0087                     _TRISC	set	135
   200                           
   201                           	psect	cinit
   202  07FD                     start_initialization:	
   203                           ; #config settings
   204                           
   205  07FD                     __initialization:
   206  07FD                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209  07FD                     __end_of__initialization:
   210  07FD  0183               	clrf	3
   211  07FE  118A  2F6B         	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	cstackCOMMON
   214  0070                     __pcstackCOMMON:
   215  0070                     ?_initiate:
   216  0070                     ??_initiate:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_input_data:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_input_high:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_input_low:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_latch_output:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ??_latch_output:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_serial_clock_pulse:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ??_serial_clock_pulse:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 1 bytes @ 0x0
   245  0070                     	ds	1
   246  0071                     ??_input_data:
   247  0071                     ??_input_high:	
   248                           ; 1 bytes @ 0x1
   249                           
   250  0071                     ??_input_low:	
   251                           ; 1 bytes @ 0x1
   252                           
   253  0071                     input_data@num:	
   254                           ; 1 bytes @ 0x1
   255                           
   256                           
   257                           ; 1 bytes @ 0x1
   258  0071                     	ds	1
   259  0072                     ??_main:
   260                           
   261                           	psect	maintext
   262  076B                     __pmaintext:	
   263                           ; 1 bytes @ 0x2
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 32 in file "Main.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, status,2, status,0, pclath, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : B00/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   283 ;;      Params:         0       0       0       0
   284 ;;      Locals:         0       0       0       0
   285 ;;      Temps:          0       0       0       0
   286 ;;      Totals:         0       0       0       0
   287 ;;Total ram usage:        0 bytes
   288 ;; Hardware stack levels required when called: 3
   289 ;; This function calls:
   290 ;;		_initiate
   291 ;;		_input_data
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           
   298                           ;psect for function _main
   299  076B                     _main:
   300  076B                     l730:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   303                           
   304                           
   305                           ;Main.c: 33:     initiate();
   306  076B  118A  2762  118A   	fcall	_initiate
   307                           
   308                           ;Main.c: 35:     input_data(7);
   309  076E  3007               	movlw	7
   310  076F  118A  27A0  118A   	fcall	_input_data
   311  0772                     l27:
   312  0772  118A  2800         	ljmp	start
   313  0774                     __end_of_main:
   314                           
   315                           	psect	text1
   316  07A0                     __ptext1:	
   317 ;; *************** function _input_data *****************
   318 ;; Defined at:
   319 ;;		line 117 in file "Main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;  num             1    wreg     unsigned char 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  num             1    1[COMMON] unsigned char 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, pclath, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   333 ;;      Params:         0       0       0       0
   334 ;;      Locals:         1       0       0       0
   335 ;;      Temps:          0       0       0       0
   336 ;;      Totals:         1       0       0       0
   337 ;;Total ram usage:        1 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; Hardware stack levels required when called: 2
   340 ;; This function calls:
   341 ;;		_input_high
   342 ;;		_input_low
   343 ;;		_latch_output
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           
   350                           ;psect for function _input_data
   351  07A0                     _input_data:
   352                           
   353                           ;incstack = 0
   354                           ; Regs used in _input_data: [wreg+status,2+status,0+pclath+cstack]
   355                           ;input_data@num stored from wreg
   356  07A0  00F1               	movwf	input_data@num
   357  07A1                     l682:
   358                           
   359                           ;Main.c: 124:         if((num & 0x01) == 0x01){
   360  07A1  1C71               	btfss	input_data@num,0
   361  07A2  2FA4               	goto	u11
   362  07A3  2FA5               	goto	u10
   363  07A4                     u11:
   364  07A4  2FA9               	goto	l686
   365  07A5                     u10:
   366  07A5                     l684:
   367                           
   368                           ;Main.c: 127:             input_high();
   369  07A5  118A  2754  118A   	fcall	_input_high
   370                           
   371                           ;Main.c: 129:             }
   372  07A8  2FAC               	goto	l688
   373  07A9                     l686:
   374  07A9  118A  275B  118A   	fcall	_input_low
   375  07AC                     l688:
   376                           
   377                           ;Main.c: 134:         if((num & 0x02) == 0x02){
   378  07AC  1CF1               	btfss	input_data@num,1
   379  07AD  2FAF               	goto	u21
   380  07AE  2FB0               	goto	u20
   381  07AF                     u21:
   382  07AF  2FB4               	goto	l692
   383  07B0                     u20:
   384  07B0                     l690:
   385                           
   386                           ;Main.c: 137:             input_high();
   387  07B0  118A  2754  118A   	fcall	_input_high
   388                           
   389                           ;Main.c: 139:             }
   390  07B3  2FB7               	goto	l694
   391  07B4                     l692:
   392  07B4  118A  275B  118A   	fcall	_input_low
   393  07B7                     l694:
   394                           
   395                           ;Main.c: 144:         if((num & 0x04) == 0x04){
   396  07B7  1D71               	btfss	input_data@num,2
   397  07B8  2FBA               	goto	u31
   398  07B9  2FBB               	goto	u30
   399  07BA                     u31:
   400  07BA  2FBF               	goto	l698
   401  07BB                     u30:
   402  07BB                     l696:
   403                           
   404                           ;Main.c: 147:             input_high();
   405  07BB  118A  2754  118A   	fcall	_input_high
   406                           
   407                           ;Main.c: 149:             }
   408  07BE  2FC2               	goto	l700
   409  07BF                     l698:
   410  07BF  118A  275B  118A   	fcall	_input_low
   411  07C2                     l700:
   412                           
   413                           ;Main.c: 154:         if((num & 0x08) == 0x08){
   414  07C2  1DF1               	btfss	input_data@num,3
   415  07C3  2FC5               	goto	u41
   416  07C4  2FC6               	goto	u40
   417  07C5                     u41:
   418  07C5  2FCA               	goto	l704
   419  07C6                     u40:
   420  07C6                     l702:
   421                           
   422                           ;Main.c: 157:             input_high();
   423  07C6  118A  2754  118A   	fcall	_input_high
   424                           
   425                           ;Main.c: 159:             }
   426  07C9  2FCD               	goto	l706
   427  07CA                     l704:
   428  07CA  118A  275B  118A   	fcall	_input_low
   429  07CD                     l706:
   430                           
   431                           ;Main.c: 164:         if((num & 0x10) == 0x10){
   432  07CD  1E71               	btfss	input_data@num,4
   433  07CE  2FD0               	goto	u51
   434  07CF  2FD1               	goto	u50
   435  07D0                     u51:
   436  07D0  2FD5               	goto	l710
   437  07D1                     u50:
   438  07D1                     l708:
   439                           
   440                           ;Main.c: 167:             input_high();
   441  07D1  118A  2754  118A   	fcall	_input_high
   442                           
   443                           ;Main.c: 169:             }
   444  07D4  2FD8               	goto	l712
   445  07D5                     l710:
   446  07D5  118A  275B  118A   	fcall	_input_low
   447  07D8                     l712:
   448                           
   449                           ;Main.c: 174:         if((num & 0x20) == 0x20){
   450  07D8  1EF1               	btfss	input_data@num,5
   451  07D9  2FDB               	goto	u61
   452  07DA  2FDC               	goto	u60
   453  07DB                     u61:
   454  07DB  2FE0               	goto	l716
   455  07DC                     u60:
   456  07DC                     l714:
   457                           
   458                           ;Main.c: 177:             input_high();
   459  07DC  118A  2754  118A   	fcall	_input_high
   460                           
   461                           ;Main.c: 179:             }
   462  07DF  2FE3               	goto	l718
   463  07E0                     l716:
   464  07E0  118A  275B  118A   	fcall	_input_low
   465  07E3                     l718:
   466                           
   467                           ;Main.c: 184:         if((num & 0x40) == 0x40){
   468  07E3  1F71               	btfss	input_data@num,6
   469  07E4  2FE6               	goto	u71
   470  07E5  2FE7               	goto	u70
   471  07E6                     u71:
   472  07E6  2FEB               	goto	l722
   473  07E7                     u70:
   474  07E7                     l720:
   475                           
   476                           ;Main.c: 187:             input_high();
   477  07E7  118A  2754  118A   	fcall	_input_high
   478                           
   479                           ;Main.c: 189:             }
   480  07EA  2FEE               	goto	l724
   481  07EB                     l722:
   482  07EB  118A  275B  118A   	fcall	_input_low
   483  07EE                     l724:
   484                           
   485                           ;Main.c: 196:         if((num & 0x80) == 0x80){
   486  07EE  1FF1               	btfss	input_data@num,7
   487  07EF  2FF1               	goto	u81
   488  07F0  2FF2               	goto	u80
   489  07F1                     u81:
   490  07F1  2FF6               	goto	l728
   491  07F2                     u80:
   492  07F2                     l726:
   493                           
   494                           ;Main.c: 199:             input_high();
   495  07F2  118A  2754  118A   	fcall	_input_high
   496                           
   497                           ;Main.c: 201:             }
   498  07F5  2FF9               	goto	l51
   499  07F6                     l728:
   500  07F6  118A  275B  118A   	fcall	_input_low
   501  07F9                     l51:
   502                           
   503                           ;Main.c: 205:     latch_output();
   504  07F9  118A  278A  118A   	fcall	_latch_output
   505  07FC                     l52:
   506  07FC  0008               	return
   507  07FD                     __end_of_input_data:
   508                           
   509                           	psect	text2
   510  078A                     __ptext2:	
   511 ;; *************** function _latch_output *****************
   512 ;; Defined at:
   513 ;;		line 235 in file "Main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   527 ;;      Params:         0       0       0       0
   528 ;;      Locals:         0       0       0       0
   529 ;;      Temps:          1       0       0       0
   530 ;;      Totals:         1       0       0       0
   531 ;;Total ram usage:        1 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_input_data
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _latch_output
   542  078A                     _latch_output:
   543  078A                     l672:	
   544                           ;incstack = 0
   545                           ; Regs used in _latch_output: [wreg]
   546                           
   547                           
   548                           ;Main.c: 236:     PORTCbits.RC4 = 0;
   549  078A  1283               	bcf	3,5	;RP0=0, select bank0
   550  078B  1303               	bcf	3,6	;RP1=0, select bank0
   551  078C  1207               	bcf	7,4	;volatile
   552  078D                     l674:
   553                           
   554                           ;Main.c: 237:     _delay((unsigned long)((5)*(8000000/4000000.0)));
   555  078D  3003               	movlw	3
   556  078E  00F0               	movwf	??_latch_output
   557  078F                     u97:
   558  078F  0BF0               	decfsz	??_latch_output,f
   559  0790  2F8F               	goto	u97
   560  0791                     l676:
   561                           
   562                           ;Main.c: 238:     PORTCbits.RC4 = 1;
   563  0791  1283               	bcf	3,5	;RP0=0, select bank0
   564  0792  1303               	bcf	3,6	;RP1=0, select bank0
   565  0793  1607               	bsf	7,4	;volatile
   566                           
   567                           ;Main.c: 239:     _delay((unsigned long)((5)*(8000000/4000000.0)));
   568  0794  3003               	movlw	3
   569  0795  00F0               	movwf	??_latch_output
   570  0796                     u107:
   571  0796  0BF0               	decfsz	??_latch_output,f
   572  0797  2F96               	goto	u107
   573  0798                     l678:
   574                           
   575                           ;Main.c: 240:     PORTCbits.RC4 = 0;
   576  0798  1283               	bcf	3,5	;RP0=0, select bank0
   577  0799  1303               	bcf	3,6	;RP1=0, select bank0
   578  079A  1207               	bcf	7,4	;volatile
   579                           
   580                           ;Main.c: 241:     _delay((unsigned long)((5)*(8000000/4000000.0)));
   581  079B  3003               	movlw	3
   582  079C  00F0               	movwf	??_latch_output
   583  079D                     u117:
   584  079D  0BF0               	decfsz	??_latch_output,f
   585  079E  2F9D               	goto	u117
   586  079F                     l64:
   587  079F  0008               	return
   588  07A0                     __end_of_latch_output:
   589                           
   590                           	psect	text3
   591  075B                     __ptext3:	
   592 ;; *************** function _input_low *****************
   593 ;; Defined at:
   594 ;;		line 217 in file "Main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   608 ;;      Params:         0       0       0       0
   609 ;;      Locals:         0       0       0       0
   610 ;;      Temps:          0       0       0       0
   611 ;;      Totals:         0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; Hardware stack levels required when called: 1
   615 ;; This function calls:
   616 ;;		_serial_clock_pulse
   617 ;; This function is called by:
   618 ;;		_input_data
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _input_low
   624  075B                     _input_low:
   625  075B                     l668:	
   626                           ;incstack = 0
   627                           ; Regs used in _input_low: [wreg+status,2+status,0+pclath+cstack]
   628                           
   629                           
   630                           ;Main.c: 219:     PORTCbits.RC7 = 0;
   631  075B  1283               	bcf	3,5	;RP0=0, select bank0
   632  075C  1303               	bcf	3,6	;RP1=0, select bank0
   633  075D  1387               	bcf	7,7	;volatile
   634  075E                     l670:
   635                           
   636                           ;Main.c: 220:     serial_clock_pulse();
   637  075E  118A  2774  118A   	fcall	_serial_clock_pulse
   638  0761                     l58:
   639  0761  0008               	return
   640  0762                     __end_of_input_low:
   641                           
   642                           	psect	text4
   643  0754                     __ptext4:	
   644 ;; *************** function _input_high *****************
   645 ;; Defined at:
   646 ;;		line 208 in file "Main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   660 ;;      Params:         0       0       0       0
   661 ;;      Locals:         0       0       0       0
   662 ;;      Temps:          0       0       0       0
   663 ;;      Totals:         0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 1
   667 ;; This function calls:
   668 ;;		_serial_clock_pulse
   669 ;; This function is called by:
   670 ;;		_input_data
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _input_high
   676  0754                     _input_high:
   677  0754                     l664:	
   678                           ;incstack = 0
   679                           ; Regs used in _input_high: [wreg+status,2+status,0+pclath+cstack]
   680                           
   681                           
   682                           ;Main.c: 210:     PORTCbits.RC7 = 1;
   683  0754  1283               	bcf	3,5	;RP0=0, select bank0
   684  0755  1303               	bcf	3,6	;RP1=0, select bank0
   685  0756  1787               	bsf	7,7	;volatile
   686  0757                     l666:
   687                           
   688                           ;Main.c: 211:     serial_clock_pulse();
   689  0757  118A  2774  118A   	fcall	_serial_clock_pulse
   690  075A                     l55:
   691  075A  0008               	return
   692  075B                     __end_of_input_high:
   693                           
   694                           	psect	text5
   695  0774                     __ptext5:	
   696 ;; *************** function _serial_clock_pulse *****************
   697 ;; Defined at:
   698 ;;		line 225 in file "Main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   712 ;;      Params:         0       0       0       0
   713 ;;      Locals:         0       0       0       0
   714 ;;      Temps:          1       0       0       0
   715 ;;      Totals:         1       0       0       0
   716 ;;Total ram usage:        1 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_input_high
   722 ;;		_input_low
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           
   727                           ;psect for function _serial_clock_pulse
   728  0774                     _serial_clock_pulse:
   729  0774                     l656:	
   730                           ;incstack = 0
   731                           ; Regs used in _serial_clock_pulse: [wreg]
   732                           
   733                           
   734                           ;Main.c: 226:     PORTCbits.RC6 = 0;
   735  0774  1283               	bcf	3,5	;RP0=0, select bank0
   736  0775  1303               	bcf	3,6	;RP1=0, select bank0
   737  0776  1307               	bcf	7,6	;volatile
   738  0777                     l658:
   739                           
   740                           ;Main.c: 227:     _delay((unsigned long)((5)*(8000000/4000000.0)));
   741  0777  3003               	movlw	3
   742  0778  00F0               	movwf	??_serial_clock_pulse
   743  0779                     u127:
   744  0779  0BF0               	decfsz	??_serial_clock_pulse,f
   745  077A  2F79               	goto	u127
   746  077B                     l660:
   747                           
   748                           ;Main.c: 228:     PORTCbits.RC6 = 1;
   749  077B  1283               	bcf	3,5	;RP0=0, select bank0
   750  077C  1303               	bcf	3,6	;RP1=0, select bank0
   751  077D  1707               	bsf	7,6	;volatile
   752                           
   753                           ;Main.c: 229:     _delay((unsigned long)((5)*(8000000/4000000.0)));
   754  077E  3003               	movlw	3
   755  077F  00F0               	movwf	??_serial_clock_pulse
   756  0780                     u137:
   757  0780  0BF0               	decfsz	??_serial_clock_pulse,f
   758  0781  2F80               	goto	u137
   759  0782                     l662:
   760                           
   761                           ;Main.c: 230:     PORTCbits.RC6 = 0;
   762  0782  1283               	bcf	3,5	;RP0=0, select bank0
   763  0783  1303               	bcf	3,6	;RP1=0, select bank0
   764  0784  1307               	bcf	7,6	;volatile
   765                           
   766                           ;Main.c: 231:     _delay((unsigned long)((5)*(8000000/4000000.0)));
   767  0785  3003               	movlw	3
   768  0786  00F0               	movwf	??_serial_clock_pulse
   769  0787                     u147:
   770  0787  0BF0               	decfsz	??_serial_clock_pulse,f
   771  0788  2F87               	goto	u147
   772  0789                     l61:
   773  0789  0008               	return
   774  078A                     __end_of_serial_clock_pulse:
   775                           
   776                           	psect	text6
   777  0762                     __ptext6:	
   778 ;; *************** function _initiate *****************
   779 ;; Defined at:
   780 ;;		line 40 in file "Main.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   794 ;;      Params:         0       0       0       0
   795 ;;      Locals:         0       0       0       0
   796 ;;      Temps:          0       0       0       0
   797 ;;      Totals:         0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _initiate
   809  0762                     _initiate:
   810  0762                     l680:	
   811                           ;incstack = 0
   812                           ; Regs used in _initiate: [wreg]
   813                           
   814                           
   815                           ;Main.c: 42:     TRISC = 0b00001111;
   816  0762  300F               	movlw	15
   817  0763  1683               	bsf	3,5	;RP0=1, select bank1
   818  0764  1303               	bcf	3,6	;RP1=0, select bank1
   819  0765  0087               	movwf	7	;volatile
   820                           
   821                           ;Main.c: 43:     TRISB = 0b01110000;
   822  0766  3070               	movlw	112
   823  0767  0086               	movwf	6	;volatile
   824                           
   825                           ;Main.c: 44:     OSCCON = 0b01110111;
   826  0768  3077               	movlw	119
   827  0769  008F               	movwf	15	;volatile
   828  076A                     l30:
   829  076A  0008               	return
   830  076B                     __end_of_initiate:
   831  007E                     btemp	set	126	;btemp
   832  007E                     wtemp0	set	126
   833                           
   834                           	psect	config
   835                           
   836                           ;Config register CONFIG @ 0x2007
   837                           ;	Oscillator Selection bits
   838                           ;	FOSC = INTRCCLK, INTOSC oscillator: CLKOUT function on RA4/OSC2/CLKOUT pin, I/O functi
      +                          on on RA5/OSC1/CLKIN
   839                           ;	Watchdog Timer Enable bit
   840                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   841                           ;	Power-up Timer Enable bit
   842                           ;	PWRTE = OFF, PWRT disabled
   843                           ;	MCLR Pin Function Select bit
   844                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   845                           ;	Code Protection bit
   846                           ;	CP = OFF, Program memory code protection is disabled
   847                           ;	Data Code Protection bit
   848                           ;	CPD = OFF, Data memory code protection is disabled
   849                           ;	Brown-out Reset Selection bits
   850                           ;	BOREN = OFF, BOR disabled
   851                           ;	Internal External Switchover bit
   852                           ;	IESO = OFF, Internal External Switchover mode is disabled
   853                           ;	Fail-Safe Clock Monitor Enabled bit
   854                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   855  2007                     	org	8199
   856  2007  38D5               	dw	14549

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_input_data
    _input_data->_latch_output
    _input_low->_serial_clock_pulse
    _input_high->_serial_clock_pulse

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     120
                           _initiate
                         _input_data
 ---------------------------------------------------------------------------------
 (1) _input_data                                           1     1      0     120
                                              1 COMMON     1     1      0
                         _input_high
                          _input_low
                       _latch_output
 ---------------------------------------------------------------------------------
 (2) _latch_output                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _input_low                                            0     0      0       0
                 _serial_clock_pulse
 ---------------------------------------------------------------------------------
 (2) _input_high                                           0     0      0       0
                 _serial_clock_pulse
 ---------------------------------------------------------------------------------
 (3) _serial_clock_pulse                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initiate                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
   _input_data
     _input_high
       _serial_clock_pulse
     _input_low
       _serial_clock_pulse
     _latch_output

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 19 12:33:49 2022

__size_of_serial_clock_pulse 0016                           l30 076A                           l51 07F9  
                         l27 0772                           l52 07FC                           l61 0789  
                         l55 075A                           l64 079F                           l58 0761  
                         u10 07A5                           u11 07A4                           u20 07B0  
                         u21 07AF                           u30 07BB                           u31 07BA  
                         u40 07C6                           u41 07C5                           u50 07D1  
                         u51 07D0                           u60 07DC                           u61 07DB  
                         u70 07E7                           u71 07E6                           u80 07F2  
                         u81 07F1                           u97 078F                          l700 07C2  
                        l710 07D5                          l702 07C6                          l720 07E7  
                        l712 07D8                          l704 07CA                          l722 07EB  
                        l714 07DC                          l706 07CD                          l730 076B  
                        l660 077B                          l724 07EE                          l716 07E0  
                        l708 07D1                          l662 0782                          l670 075E  
                        l726 07F2                          l718 07E3                          l680 0762  
                        l656 0774                          l664 0754                          l672 078A  
                        l728 07F6                          l658 0777                          l666 0757  
                        l674 078D                          l690 07B0                          l682 07A1  
                        l668 075B                          l676 0791                          l692 07B4  
                        l684 07A5                          l678 0798                          l694 07B7  
                        l686 07A9                          l696 07BB                          l688 07AC  
                        l698 07BF                          u107 0796                          u117 079D  
                        u127 0779                          u137 0780                          u147 0787  
                       _main 076B                         btemp 007E                         start 0000  
                      ?_main 0070                        _TRISB 0086                        _TRISC 0087  
              ?_latch_output 0070                        status 0003                        wtemp0 007E  
            __initialization 07FD                 __end_of_main 0774                       ??_main 0072  
             ??_latch_output 0070                       _OSCCON 008F             __end_of_initiate 076B  
              input_data@num 0071      __end_of__initialization 07FD               __pcstackCOMMON 0070  
 __end_of_serial_clock_pulse 078A                   __pmaintext 076B         __end_of_latch_output 07A0  
         __size_of_input_low 0007                    ?_initiate 0070                      __ptext1 07A0  
                    __ptext2 078A                      __ptext3 075B                      __ptext4 0754  
                    __ptext5 0774                      __ptext6 0762                   _input_data 07A0  
                 _input_high 0754            __end_of_input_low 0762         end_of_initialization 07FD  
                 ??_initiate 0070                    _PORTCbits 0007        __size_of_latch_output 0016  
        start_initialization 07FD                  ?_input_data 0070                  ?_input_high 0070  
               _latch_output 078A           _serial_clock_pulse 0774                    ___latbits 0001  
        ?_serial_clock_pulse 0070            __size_of_initiate 0009         ??_serial_clock_pulse 0070  
        __size_of_input_data 005D          __size_of_input_high 0007                    _input_low 075B  
                 ?_input_low 0070                 ??_input_data 0071                 ??_input_high 0071  
              __size_of_main 0009                     _initiate 0762           __end_of_input_data 07FD  
         __end_of_input_high 075B                  ??_input_low 0071  
